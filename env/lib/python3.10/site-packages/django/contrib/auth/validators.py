import re
from django.core import validators
from django.utils.deconstructible import deconstructible
from django.utils.translation import gettext_lazy as _

@deconstructible
class UsernameValidator:
    message = _("Enter a valid username.")

    def __init__(self, use_ascii=True, *args, **kwargs):
        self.use_ascii = use_ascii
        self.regex = self.get_regex()
        self.flags = re.ASCII if use_ascii else 0
        super().__init__(*args, **kwargs)

    def get_regex(self):
        return r"^[\w.@+-]+\Z" if self.use_ascii else r"^[\p{L}\w.@+-]+\Z"

    def __call__(self, value):
        if not re.fullmatch(self.regex, value, self.flags):
            raise validators.ValidationError(self.message)


ascii_username_validator = UsernameValidator(use_ascii=True)
unicode_username_validator = UsernameValidator(use_ascii=False)
