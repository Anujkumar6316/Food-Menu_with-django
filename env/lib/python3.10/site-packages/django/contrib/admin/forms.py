from django.contrib.auth.forms import AuthenticationForm, PasswordChangeForm
from django.core.exceptions import ValidationError
from django.utils.translation import gettext_lazy as _


class AdminAuthenticationForm(AuthenticationForm):
    """
    A custom authentication form used in the admin app, which checks if the user is a staff member.
    """

    error_messages = {
        **AuthenticationForm.error_messages,
        "invalid_login": _(
            "Please enter the correct %(username)s and password for a staff "
            "account. Note that both fields may be case-sensitive."
        ),
    }
    required_css_class = "required"

    def confirm_login_allowed(self, user):
        """
        Check if the user is a staff member before allowing login.
        """
        super().confirm_login_allowed(user)
        if not user.is_staff and not user.is_superuser:
            raise ValidationError(
                self.error_messages["invalid_login"],
                code="invalid_login",
                params={"username": self.username_field.verbose_name},
            )


class AdminPasswordChangeForm(PasswordChangeForm):
    """
    A custom password change form for the admin site, which checks if the user is authenticated.
    """

    required_css_class = "required"

    def __init__(self, *args, **kwargs):
        """
        Ensure the user is authenticated before initializing the form.
        """
        if "user" not in kwargs:
            raise ValueError("The 'user' argument is required.")
        if not kwargs["user"].is_authenticated:
            raise ValidationError("User is not authenticated.")
        super().__init__(*args, **kwargs)
