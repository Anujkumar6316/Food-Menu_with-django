import asgiref.async_to_sync
import asgiref.sync
import http
import json
from channels.generic.websocket import AsyncWebsocketConsumer

class MyConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        self.room_name = "test_room"
        await self.channel_layer.group_add(
            self.room_name,
            self.channel_name
        )
        await self.accept()

    async def disconnect(self, close_code):
        await self.channel_layer.group_discard(
            self.room_name,
            self.channel_name
        )

    async def receive(self, text_data):
        text_data_json = json.loads(text_data)
        message = text_data_json['message']

        await self.channel_layer.group_send(
            self.room_name,
            {
                'type': 'chat_message',
                'message': message
            }
        )

    async def chat_message(self, event):
        message = event['message']
        await self.send(text_data=json.dumps({
            'message': message
        }))

@asgiref.sync
def my_sync_function():
    # Do some synchronous work here
    pass

@asgiref.async_to_sync
async def my_async_to_sync_function():
    # Do some asynchronous work here
    pass

def my_http_handler(request):
    # Handle an HTTP request here
    pass

if __name__ == "__main__":
    # Run the ASGI application here
    pass
